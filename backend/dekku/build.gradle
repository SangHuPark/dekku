plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.a306'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {

	/**
	 * Spring Dependencies
	 * - Devtools
	 * - Web
	 * - Security
	 * - OAuth2
	 * - Actuator
	 * - Openfeign
	 */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	/**
	 * DB 의존성
	 * - Spring JPA
	 * - Mariadb
	 * - Redis
	 * - Redisson
	 * - P6Spy
	 * - Elasticsearch
	 * - Querydsl
	 *  - JPA, APT
	 */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson-spring-boot-starter:3.21.1'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	/**
	 * Util 의존성
	 * - Lombok
	 * - Swagger
	 * - Docker
	 * - Validation
	 * - Jwt (jjwt)
	 *  - api, impl, jackson
	 * - Prometheus
	 * - AWS (미적용)
	 */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/**
	 * Test 의존성
	 * - Spring Test
	 * - AssertJ
	 */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.assertj:assertj-core:3.21.0'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
